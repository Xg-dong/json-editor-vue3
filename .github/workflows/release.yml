name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test:run

      - name: Build package
        run: npm run build

      - name: Generate changelog
        id: changelog
        run: |
          # 获取最新的两个标签
          CURRENT_TAG=$(git describe --tags --abbrev=0)
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 ${CURRENT_TAG}^)

          # 生成变更日志
          echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
          echo "## Changes from ${PREVIOUS_TAG} to ${CURRENT_TAG}" >> $GITHUB_OUTPUT
          git log --pretty=format:"* %s (%an)" ${PREVIOUS_TAG}..${CURRENT_TAG} >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: ${{ steps.changelog.outputs.CHANGELOG }}
          draft: false
          prerelease: ${{ contains(github.ref, 'beta') || contains(github.ref, 'alpha') }}

      - name: Publish to NPM
        run: |
          if [[ ${{ github.ref }} == *"beta"* ]]; then
            npm publish --tag beta
          elif [[ ${{ github.ref }} == *"alpha"* ]]; then
            npm publish --tag alpha
          else
            npm publish
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
